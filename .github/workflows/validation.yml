# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        python setup.py pip_install

    - name: Start Kafka
      uses: 280780363/kafka-action@v1.0
      with:
        kafka version: "latest" # Optional, kafka version
        zookeeper version: "latest" # Optional, zookeeper version
        kafka port: 9092 # Optional, kafka port
        zookeeper port: 2181 # Optional, zookeeper port
        auto create topic: "true" # Optional, auto create kafka topic
  
    # Use preinstalled PostgreSQL 
    - name: Start PostgreSQL on Ubuntu
      run: |
        sudo systemctl start postgresql.service
        pg_isready
        
    # Change user name and password to meet your requirements
    - name: Create additional user
      run: |
        sudo -u postgres psql --command="CREATE USER test PASSWORD 'test'" --command="\du"
        
    # Change database name to meet your requirements
    - name: Create additional database
      run: |
        sudo -u postgres psql -c 'create database monitoring_test'
        sudo -u postgres psql -c 'grant all privileges on database monitoring_test to test;'
  
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test cases
      run: |
        python tests/test_storage.py
        python tests/test_monitor.py
